/*
 * generated by Xtext 2.26.0-SNAPSHOT
 */
package org.xtext.constraint.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.constraint.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.constraint.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getPatternModelAccess().getAlternatives(), "rule__PatternModel__Alternatives");
			builder.put(grammarAccess.getPatternOptionsAccess().getAlternatives(), "rule__PatternOptions__Alternatives");
			builder.put(grammarAccess.getOccurenceAtTimeAccess().getAlternatives(), "rule__OccurenceAtTime__Alternatives");
			builder.put(grammarAccess.getTimerAccess().getAlternatives(), "rule__Timer__Alternatives");
			builder.put(grammarAccess.getValueOptionsAccess().getAlternatives(), "rule__ValueOptions__Alternatives");
			builder.put(grammarAccess.getComparisonOperatorAccess().getAlternatives(), "rule__ComparisonOperator__Alternatives");
			builder.put(grammarAccess.getTimeUnitAccess().getAlternatives(), "rule__TimeUnit__Alternatives");
			builder.put(grammarAccess.getGreedyQuantifiersAccess().getAlternatives(), "rule__GreedyQuantifiers__Alternatives");
			builder.put(grammarAccess.getQueryInitializationAccess().getGroup(), "rule__QueryInitialization__Group__0");
			builder.put(grammarAccess.getPatternInitializationAccess().getGroup(), "rule__PatternInitialization__Group__0");
			builder.put(grammarAccess.getComplexInitializationAccess().getGroup(), "rule__ComplexInitialization__Group__0");
			builder.put(grammarAccess.getComplexPatternStatementsAccess().getGroup(), "rule__ComplexPatternStatements__Group__0");
			builder.put(grammarAccess.getComplexPatternTypeAccess().getGroup(), "rule__ComplexPatternType__Group__0");
			builder.put(grammarAccess.getComplexPatternTypeAccess().getGroup_1(), "rule__ComplexPatternType__Group_1__0");
			builder.put(grammarAccess.getComplexPatternOptionsAccess().getGroup(), "rule__ComplexPatternOptions__Group__0");
			builder.put(grammarAccess.getComplexPatternOptionsAccess().getGroup_2(), "rule__ComplexPatternOptions__Group_2__0");
			builder.put(grammarAccess.getInputStatementAccess().getGroup(), "rule__InputStatement__Group__0");
			builder.put(grammarAccess.getPatternStatementAccess().getGroup(), "rule__PatternStatement__Group__0");
			builder.put(grammarAccess.getPatternTypeAccess().getGroup(), "rule__PatternType__Group__0");
			builder.put(grammarAccess.getOccurenceAtTimeAccess().getGroup_0(), "rule__OccurenceAtTime__Group_0__0");
			builder.put(grammarAccess.getOccurenceAtTimeAccess().getGroup_1(), "rule__OccurenceAtTime__Group_1__0");
			builder.put(grammarAccess.getOccurenceAtLeastAccess().getGroup(), "rule__OccurenceAtLeast__Group__0");
			builder.put(grammarAccess.getOccurenceAtMostAccess().getGroup(), "rule__OccurenceAtMost__Group__0");
			builder.put(grammarAccess.getOccurenceAtNotSpecificTimeAccess().getGroup(), "rule__OccurenceAtNotSpecificTime__Group__0");
			builder.put(grammarAccess.getMaxDurationAccess().getGroup(), "rule__MaxDuration__Group__0");
			builder.put(grammarAccess.getMinDurationAccess().getGroup(), "rule__MinDuration__Group__0");
			builder.put(grammarAccess.getTimeWindowAccess().getGroup(), "rule__TimeWindow__Group__0");
			builder.put(grammarAccess.getNumberLiteralAccess().getGroup(), "rule__NumberLiteral__Group__0");
			builder.put(grammarAccess.getNumberLiteralAccess().getGroup_1(), "rule__NumberLiteral__Group_1__0");
			builder.put(grammarAccess.getPatternModelAccess().getElementsAssignment_0(), "rule__PatternModel__ElementsAssignment_0");
			builder.put(grammarAccess.getPatternModelAccess().getElementsAssignment_1(), "rule__PatternModel__ElementsAssignment_1");
			builder.put(grammarAccess.getPatternModelAccess().getElementsAssignment_2(), "rule__PatternModel__ElementsAssignment_2");
			builder.put(grammarAccess.getQueryInitializationAccess().getNameAssignment_2(), "rule__QueryInitialization__NameAssignment_2");
			builder.put(grammarAccess.getQueryInitializationAccess().getTimeWindowAssignment_3(), "rule__QueryInitialization__TimeWindowAssignment_3");
			builder.put(grammarAccess.getQueryInitializationAccess().getInputStatementsAssignment_7(), "rule__QueryInitialization__InputStatementsAssignment_7");
			builder.put(grammarAccess.getPatternInitializationAccess().getNameAssignment_2(), "rule__PatternInitialization__NameAssignment_2");
			builder.put(grammarAccess.getPatternInitializationAccess().getTimeWindowAssignment_3(), "rule__PatternInitialization__TimeWindowAssignment_3");
			builder.put(grammarAccess.getPatternInitializationAccess().getInputStatementsAssignment_7(), "rule__PatternInitialization__InputStatementsAssignment_7");
			builder.put(grammarAccess.getPatternInitializationAccess().getPatternStatementsAssignment_11(), "rule__PatternInitialization__PatternStatementsAssignment_11");
			builder.put(grammarAccess.getComplexInitializationAccess().getNameAssignment_2(), "rule__ComplexInitialization__NameAssignment_2");
			builder.put(grammarAccess.getComplexInitializationAccess().getTimeWindowAssignment_3(), "rule__ComplexInitialization__TimeWindowAssignment_3");
			builder.put(grammarAccess.getComplexInitializationAccess().getInputStatementsAssignment_7(), "rule__ComplexInitialization__InputStatementsAssignment_7");
			builder.put(grammarAccess.getComplexInitializationAccess().getComplexPatternStatementsAssignment_11(), "rule__ComplexInitialization__ComplexPatternStatementsAssignment_11");
			builder.put(grammarAccess.getComplexPatternStatementsAccess().getComplexPatternTypeAssignment_2(), "rule__ComplexPatternStatements__ComplexPatternTypeAssignment_2");
			builder.put(grammarAccess.getComplexPatternTypeAccess().getFirstEventAssignment_0(), "rule__ComplexPatternType__FirstEventAssignment_0");
			builder.put(grammarAccess.getComplexPatternTypeAccess().getGreedyQuantifiersAssignment_1_1(), "rule__ComplexPatternType__GreedyQuantifiersAssignment_1_1");
			builder.put(grammarAccess.getComplexPatternTypeAccess().getComplexPatternOptionsAssignment_2(), "rule__ComplexPatternType__ComplexPatternOptionsAssignment_2");
			builder.put(grammarAccess.getComplexPatternOptionsAccess().getSeceondEventAssignment_1(), "rule__ComplexPatternOptions__SeceondEventAssignment_1");
			builder.put(grammarAccess.getComplexPatternOptionsAccess().getGreedyQuantifiersAssignment_2_1(), "rule__ComplexPatternOptions__GreedyQuantifiersAssignment_2_1");
			builder.put(grammarAccess.getInputStatementAccess().getNameAssignment_1(), "rule__InputStatement__NameAssignment_1");
			builder.put(grammarAccess.getInputStatementAccess().getPropertyAssignment_3(), "rule__InputStatement__PropertyAssignment_3");
			builder.put(grammarAccess.getInputStatementAccess().getComparisonOperatorAssignment_6(), "rule__InputStatement__ComparisonOperatorAssignment_6");
			builder.put(grammarAccess.getInputStatementAccess().getValueAssignment_7(), "rule__InputStatement__ValueAssignment_7");
			builder.put(grammarAccess.getPatternStatementAccess().getPatternTypeAssignment_2(), "rule__PatternStatement__PatternTypeAssignment_2");
			builder.put(grammarAccess.getPatternTypeAccess().getFirstEventAssignment_0(), "rule__PatternType__FirstEventAssignment_0");
			builder.put(grammarAccess.getPatternTypeAccess().getPatternOptionsAssignment_1(), "rule__PatternType__PatternOptionsAssignment_1");
			builder.put(grammarAccess.getPatternOptionsAccess().getOccurenceAtLeastAssignment_0(), "rule__PatternOptions__OccurenceAtLeastAssignment_0");
			builder.put(grammarAccess.getPatternOptionsAccess().getOccurenceAtMostAssignment_1(), "rule__PatternOptions__OccurenceAtMostAssignment_1");
			builder.put(grammarAccess.getPatternOptionsAccess().getOccurenceAtNotSpecificTimeAssignment_2(), "rule__PatternOptions__OccurenceAtNotSpecificTimeAssignment_2");
			builder.put(grammarAccess.getOccurenceAtTimeAccess().getMinDurationAssignment_0_2(), "rule__OccurenceAtTime__MinDurationAssignment_0_2");
			builder.put(grammarAccess.getOccurenceAtTimeAccess().getMaxDurationAssignment_1_2(), "rule__OccurenceAtTime__MaxDurationAssignment_1_2");
			builder.put(grammarAccess.getOccurenceAtLeastAccess().getSeceondEventAssignment_1(), "rule__OccurenceAtLeast__SeceondEventAssignment_1");
			builder.put(grammarAccess.getOccurenceAtLeastAccess().getMinDurationAssignment_4(), "rule__OccurenceAtLeast__MinDurationAssignment_4");
			builder.put(grammarAccess.getOccurenceAtMostAccess().getSeceondEventAssignment_1(), "rule__OccurenceAtMost__SeceondEventAssignment_1");
			builder.put(grammarAccess.getOccurenceAtMostAccess().getMaxDurationAssignment_4(), "rule__OccurenceAtMost__MaxDurationAssignment_4");
			builder.put(grammarAccess.getOccurenceAtNotSpecificTimeAccess().getSeceondEventAssignment_1(), "rule__OccurenceAtNotSpecificTime__SeceondEventAssignment_1");
			builder.put(grammarAccess.getMaxDurationAccess().getTimerTypeAssignment_0(), "rule__MaxDuration__TimerTypeAssignment_0");
			builder.put(grammarAccess.getMaxDurationAccess().getTimeAssignment_2(), "rule__MaxDuration__TimeAssignment_2");
			builder.put(grammarAccess.getMaxDurationAccess().getTimeUnitAssignment_3(), "rule__MaxDuration__TimeUnitAssignment_3");
			builder.put(grammarAccess.getMinDurationAccess().getTimerTypeAssignment_0(), "rule__MinDuration__TimerTypeAssignment_0");
			builder.put(grammarAccess.getMinDurationAccess().getTimeAssignment_2(), "rule__MinDuration__TimeAssignment_2");
			builder.put(grammarAccess.getMinDurationAccess().getTimeUnitAssignment_3(), "rule__MinDuration__TimeUnitAssignment_3");
			builder.put(grammarAccess.getTimeWindowAccess().getTimeAssignment_3(), "rule__TimeWindow__TimeAssignment_3");
			builder.put(grammarAccess.getTimeWindowAccess().getTimeUnitAssignment_4(), "rule__TimeWindow__TimeUnitAssignment_4");
			builder.put(grammarAccess.getValueOptionsAccess().getStringLiteralAssignment_0(), "rule__ValueOptions__StringLiteralAssignment_0");
			builder.put(grammarAccess.getValueOptionsAccess().getNumberLiteralAssignment_1(), "rule__ValueOptions__NumberLiteralAssignment_1");
			builder.put(grammarAccess.getValueOptionsAccess().getTextLiteralAssignment_2(), "rule__ValueOptions__TextLiteralAssignment_2");
			builder.put(grammarAccess.getStringLiteralAccess().getValueAssignment(), "rule__StringLiteral__ValueAssignment");
			builder.put(grammarAccess.getNumberLiteralAccess().getValueAssignment_0(), "rule__NumberLiteral__ValueAssignment_0");
			builder.put(grammarAccess.getTextLiteralAccess().getValueAssignment(), "rule__TextLiteral__ValueAssignment");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
