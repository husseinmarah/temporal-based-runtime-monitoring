/*
 * generated by Xtext 2.26.0-SNAPSHOT
 */
package org.xtext.constraint.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class PatternModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.PatternModel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cElementsAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cElementsPatternInitializationParserRuleCall_0_0 = (RuleCall)cElementsAssignment_0.eContents().get(0);
		private final Assignment cElementsAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cElementsQueryInitializationParserRuleCall_1_0 = (RuleCall)cElementsAssignment_1.eContents().get(0);
		private final Assignment cElementsAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cElementsComplexInitializationParserRuleCall_2_0 = (RuleCall)cElementsAssignment_2.eContents().get(0);
		
		//PatternModel:
		//    (elements=PatternInitialization)|(elements=QueryInitialization) |(elements=ComplexInitialization);
		@Override public ParserRule getRule() { return rule; }
		
		//(elements=PatternInitialization)|(elements=QueryInitialization) |(elements=ComplexInitialization)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//(elements=PatternInitialization)
		public Assignment getElementsAssignment_0() { return cElementsAssignment_0; }
		
		//PatternInitialization
		public RuleCall getElementsPatternInitializationParserRuleCall_0_0() { return cElementsPatternInitializationParserRuleCall_0_0; }
		
		//(elements=QueryInitialization)
		public Assignment getElementsAssignment_1() { return cElementsAssignment_1; }
		
		//QueryInitialization
		public RuleCall getElementsQueryInitializationParserRuleCall_1_0() { return cElementsQueryInitializationParserRuleCall_1_0; }
		
		//(elements=ComplexInitialization)
		public Assignment getElementsAssignment_2() { return cElementsAssignment_2; }
		
		//ComplexInitialization
		public RuleCall getElementsComplexInitializationParserRuleCall_2_0() { return cElementsComplexInitializationParserRuleCall_2_0; }
	}
	public class QueryInitializationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.QueryInitialization");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInitializeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cSimpleConstraintKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cTimeWindowAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTimeWindowTimeWindowParserRuleCall_3_0 = (RuleCall)cTimeWindowAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cEventKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cInputStatementsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cInputStatementsInputStatementParserRuleCall_7_0 = (RuleCall)cInputStatementsAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//QueryInitialization:
		//    'Initialize:' 'SimpleConstraint' name=ID timeWindow=TimeWindow? '{'
		//            'Event'  '{'
		//        inputStatements=InputStatement
		//        '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Initialize:' 'SimpleConstraint' name=ID timeWindow=TimeWindow? '{'
		//        'Event'  '{'
		//    inputStatements=InputStatement
		//    '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Initialize:'
		public Keyword getInitializeKeyword_0() { return cInitializeKeyword_0; }
		
		//'SimpleConstraint'
		public Keyword getSimpleConstraintKeyword_1() { return cSimpleConstraintKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//timeWindow=TimeWindow?
		public Assignment getTimeWindowAssignment_3() { return cTimeWindowAssignment_3; }
		
		//TimeWindow
		public RuleCall getTimeWindowTimeWindowParserRuleCall_3_0() { return cTimeWindowTimeWindowParserRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//'Event'
		public Keyword getEventKeyword_5() { return cEventKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//inputStatements=InputStatement
		public Assignment getInputStatementsAssignment_7() { return cInputStatementsAssignment_7; }
		
		//InputStatement
		public RuleCall getInputStatementsInputStatementParserRuleCall_7_0() { return cInputStatementsInputStatementParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class PatternInitializationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.PatternInitialization");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInitializeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cRealTimeConstraintKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cTimeWindowAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTimeWindowTimeWindowParserRuleCall_3_0 = (RuleCall)cTimeWindowAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cEventsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cInputStatementsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cInputStatementsInputStatementParserRuleCall_7_0 = (RuleCall)cInputStatementsAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cPatternKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cPatternStatementsAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cPatternStatementsPatternStatementParserRuleCall_11_0 = (RuleCall)cPatternStatementsAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//PatternInitialization:
		//    'Initialize:' 'RealTimeConstraint' name=ID timeWindow=TimeWindow? '{'
		//            'Events' '{'
		//        inputStatements+=InputStatement+
		//        '}'
		////            'Declarations' '{'
		////        declareStatements+=DeclareStatement+
		////        '}'
		//            'Pattern'  '{'
		//        patternStatements=PatternStatement
		//        '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//    'Initialize:' 'RealTimeConstraint' name=ID timeWindow=TimeWindow? '{'
		//            'Events' '{'
		//        inputStatements+=InputStatement+
		//        '}'
		////            'Declarations' '{'
		////        declareStatements+=DeclareStatement+
		////        '}'
		//            'Pattern'  '{'
		//        patternStatements=PatternStatement
		//        '}'
		//    '}'
		public Group getGroup() { return cGroup; }
		
		//'Initialize:'
		public Keyword getInitializeKeyword_0() { return cInitializeKeyword_0; }
		
		//'RealTimeConstraint'
		public Keyword getRealTimeConstraintKeyword_1() { return cRealTimeConstraintKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//timeWindow=TimeWindow?
		public Assignment getTimeWindowAssignment_3() { return cTimeWindowAssignment_3; }
		
		//TimeWindow
		public RuleCall getTimeWindowTimeWindowParserRuleCall_3_0() { return cTimeWindowTimeWindowParserRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//'Events'
		public Keyword getEventsKeyword_5() { return cEventsKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//inputStatements+=InputStatement+
		public Assignment getInputStatementsAssignment_7() { return cInputStatementsAssignment_7; }
		
		//InputStatement
		public RuleCall getInputStatementsInputStatementParserRuleCall_7_0() { return cInputStatementsInputStatementParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		////            'Declarations' '{'
		////        declareStatements+=DeclareStatement+
		////        '}'
		//            'Pattern'
		public Keyword getPatternKeyword_9() { return cPatternKeyword_9; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//patternStatements=PatternStatement
		public Assignment getPatternStatementsAssignment_11() { return cPatternStatementsAssignment_11; }
		
		//PatternStatement
		public RuleCall getPatternStatementsPatternStatementParserRuleCall_11_0() { return cPatternStatementsPatternStatementParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class ComplexInitializationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.ComplexInitialization");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInitializeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cComplexConstraintKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cTimeWindowAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTimeWindowTimeWindowParserRuleCall_3_0 = (RuleCall)cTimeWindowAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cEventsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cInputStatementsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cInputStatementsInputStatementParserRuleCall_7_0 = (RuleCall)cInputStatementsAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cPatternKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cComplexPatternStatementsAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cComplexPatternStatementsComplexPatternStatementsParserRuleCall_11_0 = (RuleCall)cComplexPatternStatementsAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//ComplexInitialization:
		//    'Initialize:' 'ComplexConstraint' name=ID timeWindow=TimeWindow? '{'
		//            'Events' '{'
		//        inputStatements+=InputStatement+
		//        '}'
		//            'Pattern'  '{'
		//        complexPatternStatements=ComplexPatternStatements
		//        '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Initialize:' 'ComplexConstraint' name=ID timeWindow=TimeWindow? '{'
		//        'Events' '{'
		//    inputStatements+=InputStatement+
		//    '}'
		//        'Pattern'  '{'
		//    complexPatternStatements=ComplexPatternStatements
		//    '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Initialize:'
		public Keyword getInitializeKeyword_0() { return cInitializeKeyword_0; }
		
		//'ComplexConstraint'
		public Keyword getComplexConstraintKeyword_1() { return cComplexConstraintKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//timeWindow=TimeWindow?
		public Assignment getTimeWindowAssignment_3() { return cTimeWindowAssignment_3; }
		
		//TimeWindow
		public RuleCall getTimeWindowTimeWindowParserRuleCall_3_0() { return cTimeWindowTimeWindowParserRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//'Events'
		public Keyword getEventsKeyword_5() { return cEventsKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//inputStatements+=InputStatement+
		public Assignment getInputStatementsAssignment_7() { return cInputStatementsAssignment_7; }
		
		//InputStatement
		public RuleCall getInputStatementsInputStatementParserRuleCall_7_0() { return cInputStatementsInputStatementParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'Pattern'
		public Keyword getPatternKeyword_9() { return cPatternKeyword_9; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//complexPatternStatements=ComplexPatternStatements
		public Assignment getComplexPatternStatementsAssignment_11() { return cComplexPatternStatementsAssignment_11; }
		
		//ComplexPatternStatements
		public RuleCall getComplexPatternStatementsComplexPatternStatementsParserRuleCall_11_0() { return cComplexPatternStatementsComplexPatternStatementsParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class ComplexPatternStatementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.ComplexPatternStatements");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDefinePatternKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cComplexPatternTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cComplexPatternTypeComplexPatternTypeParserRuleCall_2_0 = (RuleCall)cComplexPatternTypeAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ComplexPatternStatements:
		//        'DefinePattern' '(' complexPatternType=ComplexPatternType ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'DefinePattern' '(' complexPatternType=ComplexPatternType ')'
		public Group getGroup() { return cGroup; }
		
		//'DefinePattern'
		public Keyword getDefinePatternKeyword_0() { return cDefinePatternKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//complexPatternType=ComplexPatternType
		public Assignment getComplexPatternTypeAssignment_2() { return cComplexPatternTypeAssignment_2; }
		
		//ComplexPatternType
		public RuleCall getComplexPatternTypeComplexPatternTypeParserRuleCall_2_0() { return cComplexPatternTypeComplexPatternTypeParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class ComplexPatternTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.ComplexPatternType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFirstEventAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cFirstEventInputStatementCrossReference_0_0 = (CrossReference)cFirstEventAssignment_0.eContents().get(0);
		private final RuleCall cFirstEventInputStatementIDTerminalRuleCall_0_0_1 = (RuleCall)cFirstEventInputStatementCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cOccursKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cGreedyQuantifiersAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cGreedyQuantifiersGreedyQuantifiersEnumRuleCall_1_1_0 = (RuleCall)cGreedyQuantifiersAssignment_1_1.eContents().get(0);
		private final Assignment cComplexPatternOptionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cComplexPatternOptionsComplexPatternOptionsParserRuleCall_2_0 = (RuleCall)cComplexPatternOptionsAssignment_2.eContents().get(0);
		
		//ComplexPatternType:
		//firstEvent=[InputStatement] ('Occurs' greedyQuantifiers=GreedyQuantifiers)? complexPatternOptions+=ComplexPatternOptions+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//firstEvent=[InputStatement] ('Occurs' greedyQuantifiers=GreedyQuantifiers)? complexPatternOptions+=ComplexPatternOptions+
		public Group getGroup() { return cGroup; }
		
		//firstEvent=[InputStatement]
		public Assignment getFirstEventAssignment_0() { return cFirstEventAssignment_0; }
		
		//[InputStatement]
		public CrossReference getFirstEventInputStatementCrossReference_0_0() { return cFirstEventInputStatementCrossReference_0_0; }
		
		//ID
		public RuleCall getFirstEventInputStatementIDTerminalRuleCall_0_0_1() { return cFirstEventInputStatementIDTerminalRuleCall_0_0_1; }
		
		//('Occurs' greedyQuantifiers=GreedyQuantifiers)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'Occurs'
		public Keyword getOccursKeyword_1_0() { return cOccursKeyword_1_0; }
		
		//greedyQuantifiers=GreedyQuantifiers
		public Assignment getGreedyQuantifiersAssignment_1_1() { return cGreedyQuantifiersAssignment_1_1; }
		
		//GreedyQuantifiers
		public RuleCall getGreedyQuantifiersGreedyQuantifiersEnumRuleCall_1_1_0() { return cGreedyQuantifiersGreedyQuantifiersEnumRuleCall_1_1_0; }
		
		//complexPatternOptions+=ComplexPatternOptions+
		public Assignment getComplexPatternOptionsAssignment_2() { return cComplexPatternOptionsAssignment_2; }
		
		//ComplexPatternOptions
		public RuleCall getComplexPatternOptionsComplexPatternOptionsParserRuleCall_2_0() { return cComplexPatternOptionsComplexPatternOptionsParserRuleCall_2_0; }
	}
	public class ComplexPatternOptionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.ComplexPatternOptions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFollowedByKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSeceondEventAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSeceondEventInputStatementCrossReference_1_0 = (CrossReference)cSeceondEventAssignment_1.eContents().get(0);
		private final RuleCall cSeceondEventInputStatementIDTerminalRuleCall_1_0_1 = (RuleCall)cSeceondEventInputStatementCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cOccursKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cGreedyQuantifiersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cGreedyQuantifiersGreedyQuantifiersEnumRuleCall_2_1_0 = (RuleCall)cGreedyQuantifiersAssignment_2_1.eContents().get(0);
		
		//ComplexPatternOptions:
		//('followed-by' (seceondEvent=[InputStatement]) ('Occurs' greedyQuantifiers=GreedyQuantifiers)?)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('followed-by' (seceondEvent=[InputStatement]) ('Occurs' greedyQuantifiers=GreedyQuantifiers)?)
		public Group getGroup() { return cGroup; }
		
		//'followed-by'
		public Keyword getFollowedByKeyword_0() { return cFollowedByKeyword_0; }
		
		//(seceondEvent=[InputStatement])
		public Assignment getSeceondEventAssignment_1() { return cSeceondEventAssignment_1; }
		
		//[InputStatement]
		public CrossReference getSeceondEventInputStatementCrossReference_1_0() { return cSeceondEventInputStatementCrossReference_1_0; }
		
		//ID
		public RuleCall getSeceondEventInputStatementIDTerminalRuleCall_1_0_1() { return cSeceondEventInputStatementIDTerminalRuleCall_1_0_1; }
		
		//('Occurs' greedyQuantifiers=GreedyQuantifiers)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Occurs'
		public Keyword getOccursKeyword_2_0() { return cOccursKeyword_2_0; }
		
		//greedyQuantifiers=GreedyQuantifiers
		public Assignment getGreedyQuantifiersAssignment_2_1() { return cGreedyQuantifiersAssignment_2_1; }
		
		//GreedyQuantifiers
		public RuleCall getGreedyQuantifiersGreedyQuantifiersEnumRuleCall_2_1_0() { return cGreedyQuantifiersGreedyQuantifiersEnumRuleCall_2_1_0; }
	}
	public class InputStatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.InputStatement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInputEventKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cAsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPropertyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPropertySTRINGTerminalRuleCall_3_0 = (RuleCall)cPropertyAssignment_3.eContents().get(0);
		private final Keyword cAndKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cSetEventKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cComparisonOperatorAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cComparisonOperatorComparisonOperatorEnumRuleCall_6_0 = (RuleCall)cComparisonOperatorAssignment_6.eContents().get(0);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueValueOptionsParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//InputStatement:
		//   'InputEvent' name=ID 'as' Property=STRING 'and' 'SetEvent' comparisonOperator=ComparisonOperator value=ValueOptions','
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'InputEvent' name=ID 'as' Property=STRING 'and' 'SetEvent' comparisonOperator=ComparisonOperator value=ValueOptions','
		public Group getGroup() { return cGroup; }
		
		//'InputEvent'
		public Keyword getInputEventKeyword_0() { return cInputEventKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'as'
		public Keyword getAsKeyword_2() { return cAsKeyword_2; }
		
		//Property=STRING
		public Assignment getPropertyAssignment_3() { return cPropertyAssignment_3; }
		
		//STRING
		public RuleCall getPropertySTRINGTerminalRuleCall_3_0() { return cPropertySTRINGTerminalRuleCall_3_0; }
		
		//'and'
		public Keyword getAndKeyword_4() { return cAndKeyword_4; }
		
		//'SetEvent'
		public Keyword getSetEventKeyword_5() { return cSetEventKeyword_5; }
		
		//comparisonOperator=ComparisonOperator
		public Assignment getComparisonOperatorAssignment_6() { return cComparisonOperatorAssignment_6; }
		
		//ComparisonOperator
		public RuleCall getComparisonOperatorComparisonOperatorEnumRuleCall_6_0() { return cComparisonOperatorComparisonOperatorEnumRuleCall_6_0; }
		
		//value=ValueOptions
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }
		
		//ValueOptions
		public RuleCall getValueValueOptionsParserRuleCall_7_0() { return cValueValueOptionsParserRuleCall_7_0; }
		
		//','
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }
	}
	public class PatternStatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.PatternStatement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDefinePatternKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPatternTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPatternTypePatternTypeParserRuleCall_2_0 = (RuleCall)cPatternTypeAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////DeclareStatement:
		////    'SetEvent' (select=[InputStatement]) comparisonOperator=ComparisonOperator value=ValueOptions ','
		////;
		//PatternStatement:
		//    'DefinePattern' '(' patternType=PatternType ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'DefinePattern' '(' patternType=PatternType ')'
		public Group getGroup() { return cGroup; }
		
		//'DefinePattern'
		public Keyword getDefinePatternKeyword_0() { return cDefinePatternKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//patternType=PatternType
		public Assignment getPatternTypeAssignment_2() { return cPatternTypeAssignment_2; }
		
		//PatternType
		public RuleCall getPatternTypePatternTypeParserRuleCall_2_0() { return cPatternTypePatternTypeParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class PatternTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.PatternType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFirstEventAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cFirstEventInputStatementCrossReference_0_0 = (CrossReference)cFirstEventAssignment_0.eContents().get(0);
		private final RuleCall cFirstEventInputStatementIDTerminalRuleCall_0_0_1 = (RuleCall)cFirstEventInputStatementCrossReference_0_0.eContents().get(1);
		private final Assignment cPatternOptionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPatternOptionsPatternOptionsParserRuleCall_1_0 = (RuleCall)cPatternOptionsAssignment_1.eContents().get(0);
		
		//PatternType:
		//     firstEvent=[InputStatement] (patternOptions+=PatternOptions+);
		@Override public ParserRule getRule() { return rule; }
		
		//firstEvent=[InputStatement] (patternOptions+=PatternOptions+)
		public Group getGroup() { return cGroup; }
		
		//firstEvent=[InputStatement]
		public Assignment getFirstEventAssignment_0() { return cFirstEventAssignment_0; }
		
		//[InputStatement]
		public CrossReference getFirstEventInputStatementCrossReference_0_0() { return cFirstEventInputStatementCrossReference_0_0; }
		
		//ID
		public RuleCall getFirstEventInputStatementIDTerminalRuleCall_0_0_1() { return cFirstEventInputStatementIDTerminalRuleCall_0_0_1; }
		
		//(patternOptions+=PatternOptions+)
		public Assignment getPatternOptionsAssignment_1() { return cPatternOptionsAssignment_1; }
		
		//PatternOptions
		public RuleCall getPatternOptionsPatternOptionsParserRuleCall_1_0() { return cPatternOptionsPatternOptionsParserRuleCall_1_0; }
	}
	public class PatternOptionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.PatternOptions");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOccurenceAtLeastAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOccurenceAtLeastOccurenceAtLeastParserRuleCall_0_0 = (RuleCall)cOccurenceAtLeastAssignment_0.eContents().get(0);
		private final Assignment cOccurenceAtMostAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOccurenceAtMostOccurenceAtMostParserRuleCall_1_0 = (RuleCall)cOccurenceAtMostAssignment_1.eContents().get(0);
		private final Assignment cOccurenceAtNotSpecificTimeAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOccurenceAtNotSpecificTimeOccurenceAtNotSpecificTimeParserRuleCall_2_0 = (RuleCall)cOccurenceAtNotSpecificTimeAssignment_2.eContents().get(0);
		
		//PatternOptions:
		//occurenceAtLeast=OccurenceAtLeast |
		//occurenceAtMost=OccurenceAtMost |
		//occurenceAtNotSpecificTime=OccurenceAtNotSpecificTime
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//occurenceAtLeast=OccurenceAtLeast |
		//occurenceAtMost=OccurenceAtMost |
		//occurenceAtNotSpecificTime=OccurenceAtNotSpecificTime
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//occurenceAtLeast=OccurenceAtLeast
		public Assignment getOccurenceAtLeastAssignment_0() { return cOccurenceAtLeastAssignment_0; }
		
		//OccurenceAtLeast
		public RuleCall getOccurenceAtLeastOccurenceAtLeastParserRuleCall_0_0() { return cOccurenceAtLeastOccurenceAtLeastParserRuleCall_0_0; }
		
		//occurenceAtMost=OccurenceAtMost
		public Assignment getOccurenceAtMostAssignment_1() { return cOccurenceAtMostAssignment_1; }
		
		//OccurenceAtMost
		public RuleCall getOccurenceAtMostOccurenceAtMostParserRuleCall_1_0() { return cOccurenceAtMostOccurenceAtMostParserRuleCall_1_0; }
		
		//occurenceAtNotSpecificTime=OccurenceAtNotSpecificTime
		public Assignment getOccurenceAtNotSpecificTimeAssignment_2() { return cOccurenceAtNotSpecificTimeAssignment_2; }
		
		//OccurenceAtNotSpecificTime
		public RuleCall getOccurenceAtNotSpecificTimeOccurenceAtNotSpecificTimeParserRuleCall_2_0() { return cOccurenceAtNotSpecificTimeOccurenceAtNotSpecificTimeParserRuleCall_2_0; }
	}
	public class OccurenceAtTimeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.OccurenceAtTime");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cOccursAfterKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cCommercialAtKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cMinDurationAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cMinDurationMinDurationParserRuleCall_0_2_0 = (RuleCall)cMinDurationAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cOccursBeforeKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cCommercialAtKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cMaxDurationAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cMaxDurationMaxDurationParserRuleCall_1_2_0 = (RuleCall)cMaxDurationAssignment_1_2.eContents().get(0);
		
		//OccurenceAtTime:
		//     'Occurs-After' '@' minDuration=MinDuration | 'Occurs-Before' '@' maxDuration=MaxDuration
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Occurs-After' '@' minDuration=MinDuration | 'Occurs-Before' '@' maxDuration=MaxDuration
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Occurs-After' '@' minDuration=MinDuration
		public Group getGroup_0() { return cGroup_0; }
		
		//'Occurs-After'
		public Keyword getOccursAfterKeyword_0_0() { return cOccursAfterKeyword_0_0; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0_1() { return cCommercialAtKeyword_0_1; }
		
		//minDuration=MinDuration
		public Assignment getMinDurationAssignment_0_2() { return cMinDurationAssignment_0_2; }
		
		//MinDuration
		public RuleCall getMinDurationMinDurationParserRuleCall_0_2_0() { return cMinDurationMinDurationParserRuleCall_0_2_0; }
		
		//'Occurs-Before' '@' maxDuration=MaxDuration
		public Group getGroup_1() { return cGroup_1; }
		
		//'Occurs-Before'
		public Keyword getOccursBeforeKeyword_1_0() { return cOccursBeforeKeyword_1_0; }
		
		//'@'
		public Keyword getCommercialAtKeyword_1_1() { return cCommercialAtKeyword_1_1; }
		
		//maxDuration=MaxDuration
		public Assignment getMaxDurationAssignment_1_2() { return cMaxDurationAssignment_1_2; }
		
		//MaxDuration
		public RuleCall getMaxDurationMaxDurationParserRuleCall_1_2_0() { return cMaxDurationMaxDurationParserRuleCall_1_2_0; }
	}
	public class OccurenceAtLeastElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.OccurenceAtLeast");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFollowedByKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSeceondEventAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSeceondEventInputStatementCrossReference_1_0 = (CrossReference)cSeceondEventAssignment_1.eContents().get(0);
		private final RuleCall cSeceondEventInputStatementIDTerminalRuleCall_1_0_1 = (RuleCall)cSeceondEventInputStatementCrossReference_1_0.eContents().get(1);
		private final Keyword cOccursAfterKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCommercialAtKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMinDurationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMinDurationMinDurationParserRuleCall_4_0 = (RuleCall)cMinDurationAssignment_4.eContents().get(0);
		
		//OccurenceAtLeast:
		//     ('followed-by' (seceondEvent=[InputStatement]) 'Occurs-After' '@' minDuration=MinDuration)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('followed-by' (seceondEvent=[InputStatement]) 'Occurs-After' '@' minDuration=MinDuration)
		public Group getGroup() { return cGroup; }
		
		//'followed-by'
		public Keyword getFollowedByKeyword_0() { return cFollowedByKeyword_0; }
		
		//(seceondEvent=[InputStatement])
		public Assignment getSeceondEventAssignment_1() { return cSeceondEventAssignment_1; }
		
		//[InputStatement]
		public CrossReference getSeceondEventInputStatementCrossReference_1_0() { return cSeceondEventInputStatementCrossReference_1_0; }
		
		//ID
		public RuleCall getSeceondEventInputStatementIDTerminalRuleCall_1_0_1() { return cSeceondEventInputStatementIDTerminalRuleCall_1_0_1; }
		
		//'Occurs-After'
		public Keyword getOccursAfterKeyword_2() { return cOccursAfterKeyword_2; }
		
		//'@'
		public Keyword getCommercialAtKeyword_3() { return cCommercialAtKeyword_3; }
		
		//minDuration=MinDuration
		public Assignment getMinDurationAssignment_4() { return cMinDurationAssignment_4; }
		
		//MinDuration
		public RuleCall getMinDurationMinDurationParserRuleCall_4_0() { return cMinDurationMinDurationParserRuleCall_4_0; }
	}
	public class OccurenceAtMostElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.OccurenceAtMost");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFollowedByKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSeceondEventAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSeceondEventInputStatementCrossReference_1_0 = (CrossReference)cSeceondEventAssignment_1.eContents().get(0);
		private final RuleCall cSeceondEventInputStatementIDTerminalRuleCall_1_0_1 = (RuleCall)cSeceondEventInputStatementCrossReference_1_0.eContents().get(1);
		private final Keyword cOccursBeforeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCommercialAtKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMaxDurationAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMaxDurationMaxDurationParserRuleCall_4_0 = (RuleCall)cMaxDurationAssignment_4.eContents().get(0);
		
		//OccurenceAtMost:
		//    ('followed-by' (seceondEvent=[InputStatement]) 'Occurs-Before' '@' maxDuration=MaxDuration)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('followed-by' (seceondEvent=[InputStatement]) 'Occurs-Before' '@' maxDuration=MaxDuration)
		public Group getGroup() { return cGroup; }
		
		//'followed-by'
		public Keyword getFollowedByKeyword_0() { return cFollowedByKeyword_0; }
		
		//(seceondEvent=[InputStatement])
		public Assignment getSeceondEventAssignment_1() { return cSeceondEventAssignment_1; }
		
		//[InputStatement]
		public CrossReference getSeceondEventInputStatementCrossReference_1_0() { return cSeceondEventInputStatementCrossReference_1_0; }
		
		//ID
		public RuleCall getSeceondEventInputStatementIDTerminalRuleCall_1_0_1() { return cSeceondEventInputStatementIDTerminalRuleCall_1_0_1; }
		
		//'Occurs-Before'
		public Keyword getOccursBeforeKeyword_2() { return cOccursBeforeKeyword_2; }
		
		//'@'
		public Keyword getCommercialAtKeyword_3() { return cCommercialAtKeyword_3; }
		
		//maxDuration=MaxDuration
		public Assignment getMaxDurationAssignment_4() { return cMaxDurationAssignment_4; }
		
		//MaxDuration
		public RuleCall getMaxDurationMaxDurationParserRuleCall_4_0() { return cMaxDurationMaxDurationParserRuleCall_4_0; }
	}
	public class OccurenceAtNotSpecificTimeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.OccurenceAtNotSpecificTime");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFollowedByKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSeceondEventAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSeceondEventInputStatementCrossReference_1_0 = (CrossReference)cSeceondEventAssignment_1.eContents().get(0);
		private final RuleCall cSeceondEventInputStatementIDTerminalRuleCall_1_0_1 = (RuleCall)cSeceondEventInputStatementCrossReference_1_0.eContents().get(1);
		
		//OccurenceAtNotSpecificTime:
		//    ('followed-by' (seceondEvent=[InputStatement]))
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('followed-by' (seceondEvent=[InputStatement]))
		public Group getGroup() { return cGroup; }
		
		//'followed-by'
		public Keyword getFollowedByKeyword_0() { return cFollowedByKeyword_0; }
		
		//(seceondEvent=[InputStatement])
		public Assignment getSeceondEventAssignment_1() { return cSeceondEventAssignment_1; }
		
		//[InputStatement]
		public CrossReference getSeceondEventInputStatementCrossReference_1_0() { return cSeceondEventInputStatementCrossReference_1_0; }
		
		//ID
		public RuleCall getSeceondEventInputStatementIDTerminalRuleCall_1_0_1() { return cSeceondEventInputStatementIDTerminalRuleCall_1_0_1; }
	}
	public class TimerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.Timer");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMaxDurationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMinDurationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Timer:
		//    MaxDuration | MinDuration
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MaxDuration | MinDuration
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MaxDuration
		public RuleCall getMaxDurationParserRuleCall_0() { return cMaxDurationParserRuleCall_0; }
		
		//MinDuration
		public RuleCall getMinDurationParserRuleCall_1() { return cMinDurationParserRuleCall_1; }
	}
	public class MaxDurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.MaxDuration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTimerTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTimerTypeMaxDurationKeyword_0_0 = (Keyword)cTimerTypeAssignment_0.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTimeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTimeINTTerminalRuleCall_2_0 = (RuleCall)cTimeAssignment_2.eContents().get(0);
		private final Assignment cTimeUnitAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTimeUnitTimeUnitEnumRuleCall_3_0 = (RuleCall)cTimeUnitAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MaxDuration:
		//timerType='MaxDuration' '['time=INT timeUnit=TimeUnit ']'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//timerType='MaxDuration' '['time=INT timeUnit=TimeUnit ']'
		public Group getGroup() { return cGroup; }
		
		//timerType='MaxDuration'
		public Assignment getTimerTypeAssignment_0() { return cTimerTypeAssignment_0; }
		
		//'MaxDuration'
		public Keyword getTimerTypeMaxDurationKeyword_0_0() { return cTimerTypeMaxDurationKeyword_0_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//time=INT
		public Assignment getTimeAssignment_2() { return cTimeAssignment_2; }
		
		//INT
		public RuleCall getTimeINTTerminalRuleCall_2_0() { return cTimeINTTerminalRuleCall_2_0; }
		
		//timeUnit=TimeUnit
		public Assignment getTimeUnitAssignment_3() { return cTimeUnitAssignment_3; }
		
		//TimeUnit
		public RuleCall getTimeUnitTimeUnitEnumRuleCall_3_0() { return cTimeUnitTimeUnitEnumRuleCall_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}
	public class MinDurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.MinDuration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTimerTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTimerTypeMinDurationKeyword_0_0 = (Keyword)cTimerTypeAssignment_0.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTimeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTimeINTTerminalRuleCall_2_0 = (RuleCall)cTimeAssignment_2.eContents().get(0);
		private final Assignment cTimeUnitAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTimeUnitTimeUnitEnumRuleCall_3_0 = (RuleCall)cTimeUnitAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MinDuration:
		//timerType='MinDuration' '['time=INT timeUnit=TimeUnit']'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//timerType='MinDuration' '['time=INT timeUnit=TimeUnit']'
		public Group getGroup() { return cGroup; }
		
		//timerType='MinDuration'
		public Assignment getTimerTypeAssignment_0() { return cTimerTypeAssignment_0; }
		
		//'MinDuration'
		public Keyword getTimerTypeMinDurationKeyword_0_0() { return cTimerTypeMinDurationKeyword_0_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//time=INT
		public Assignment getTimeAssignment_2() { return cTimeAssignment_2; }
		
		//INT
		public RuleCall getTimeINTTerminalRuleCall_2_0() { return cTimeINTTerminalRuleCall_2_0; }
		
		//timeUnit=TimeUnit
		public Assignment getTimeUnitAssignment_3() { return cTimeUnitAssignment_3; }
		
		//TimeUnit
		public RuleCall getTimeUnitTimeUnitEnumRuleCall_3_0() { return cTimeUnitTimeUnitEnumRuleCall_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}
	public class TimeWindowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.TimeWindow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWithKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTimeWindowKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTimeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTimeINTTerminalRuleCall_3_0 = (RuleCall)cTimeAssignment_3.eContents().get(0);
		private final Assignment cTimeUnitAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTimeUnitTimeUnitEnumRuleCall_4_0 = (RuleCall)cTimeUnitAssignment_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//TimeWindow:
		//'With' 'TimeWindow' '['time=INT timeUnit=TimeUnit']'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'With' 'TimeWindow' '['time=INT timeUnit=TimeUnit']'
		public Group getGroup() { return cGroup; }
		
		//'With'
		public Keyword getWithKeyword_0() { return cWithKeyword_0; }
		
		//'TimeWindow'
		public Keyword getTimeWindowKeyword_1() { return cTimeWindowKeyword_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }
		
		//time=INT
		public Assignment getTimeAssignment_3() { return cTimeAssignment_3; }
		
		//INT
		public RuleCall getTimeINTTerminalRuleCall_3_0() { return cTimeINTTerminalRuleCall_3_0; }
		
		//timeUnit=TimeUnit
		public Assignment getTimeUnitAssignment_4() { return cTimeUnitAssignment_4; }
		
		//TimeUnit
		public RuleCall getTimeUnitTimeUnitEnumRuleCall_4_0() { return cTimeUnitTimeUnitEnumRuleCall_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class ValueOptionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.ValueOptions");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cStringLiteralAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cStringLiteralStringLiteralParserRuleCall_0_0 = (RuleCall)cStringLiteralAssignment_0.eContents().get(0);
		private final Assignment cNumberLiteralAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cNumberLiteralNumberLiteralParserRuleCall_1_0 = (RuleCall)cNumberLiteralAssignment_1.eContents().get(0);
		private final Assignment cTextLiteralAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cTextLiteralTextLiteralParserRuleCall_2_0 = (RuleCall)cTextLiteralAssignment_2.eContents().get(0);
		
		//ValueOptions :
		//    stringLiteral=StringLiteral |
		//    numberLiteral=NumberLiteral |
		//    textLiteral=TextLiteral;
		@Override public ParserRule getRule() { return rule; }
		
		//stringLiteral=StringLiteral |
		//numberLiteral=NumberLiteral |
		//textLiteral=TextLiteral
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//stringLiteral=StringLiteral
		public Assignment getStringLiteralAssignment_0() { return cStringLiteralAssignment_0; }
		
		//StringLiteral
		public RuleCall getStringLiteralStringLiteralParserRuleCall_0_0() { return cStringLiteralStringLiteralParserRuleCall_0_0; }
		
		//numberLiteral=NumberLiteral
		public Assignment getNumberLiteralAssignment_1() { return cNumberLiteralAssignment_1; }
		
		//NumberLiteral
		public RuleCall getNumberLiteralNumberLiteralParserRuleCall_1_0() { return cNumberLiteralNumberLiteralParserRuleCall_1_0; }
		
		//textLiteral=TextLiteral
		public Assignment getTextLiteralAssignment_2() { return cTextLiteralAssignment_2; }
		
		//TextLiteral
		public RuleCall getTextLiteralTextLiteralParserRuleCall_2_0() { return cTextLiteralTextLiteralParserRuleCall_2_0; }
	}
	public class StringLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.StringLiteral");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//StringLiteral :
		//    value=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//value=STRING
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0() { return cValueSTRINGTerminalRuleCall_0; }
	}
	public class NumberLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.NumberLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cValueINTTerminalRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//NumberLiteral:
		//    value=INT('.'INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//value=INT('.'INT)?
		public Group getGroup() { return cGroup; }
		
		//value=INT
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }
		
		//INT
		public RuleCall getValueINTTerminalRuleCall_0_0() { return cValueINTTerminalRuleCall_0_0; }
		
		//('.'INT)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1_1() { return cINTTerminalRuleCall_1_1; }
	}
	public class TextLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.TextLiteral");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueIDTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//TextLiteral:
		//    value=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//value=ID
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//ID
		public RuleCall getValueIDTerminalRuleCall_0() { return cValueIDTerminalRuleCall_0; }
	}
	
	public class ComparisonOperatorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.ComparisonOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEqualEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEqualEqualsSignKeyword_0_0 = (Keyword)cEqualEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNotEqualEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNotEqualExclamationMarkEqualsSignKeyword_1_0 = (Keyword)cNotEqualEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBiggerThanEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBiggerThanGreaterThanSignKeyword_2_0 = (Keyword)cBiggerThanEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLessThanEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLessThanLessThanSignKeyword_3_0 = (Keyword)cLessThanEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cLessThanOrEqualEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cLessThanOrEqualEqualsSignLessThanSignKeyword_4_0 = (Keyword)cLessThanOrEqualEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cBiggerThanOrEqualEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cBiggerThanOrEqualEqualsSignGreaterThanSignKeyword_5_0 = (Keyword)cBiggerThanOrEqualEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum ComparisonOperator:
		//    Equal = '=' |
		//    NotEqual = '!=' |
		//    BiggerThan = '>'|
		//    LessThan = '<' |
		//    LessThanOrEqual = '=<' |
		//    BiggerThanOrEqual = '=>'
		//    ;
		public EnumRule getRule() { return rule; }
		
		//Equal = '=' |
		//NotEqual = '!=' |
		//BiggerThan = '>'|
		//LessThan = '<' |
		//LessThanOrEqual = '=<' |
		//BiggerThanOrEqual = '=>'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Equal = '='
		public EnumLiteralDeclaration getEqualEnumLiteralDeclaration_0() { return cEqualEnumLiteralDeclaration_0; }
		
		//'='
		public Keyword getEqualEqualsSignKeyword_0_0() { return cEqualEqualsSignKeyword_0_0; }
		
		//NotEqual = '!='
		public EnumLiteralDeclaration getNotEqualEnumLiteralDeclaration_1() { return cNotEqualEnumLiteralDeclaration_1; }
		
		//'!='
		public Keyword getNotEqualExclamationMarkEqualsSignKeyword_1_0() { return cNotEqualExclamationMarkEqualsSignKeyword_1_0; }
		
		//BiggerThan = '>'
		public EnumLiteralDeclaration getBiggerThanEnumLiteralDeclaration_2() { return cBiggerThanEnumLiteralDeclaration_2; }
		
		//'>'
		public Keyword getBiggerThanGreaterThanSignKeyword_2_0() { return cBiggerThanGreaterThanSignKeyword_2_0; }
		
		//LessThan = '<'
		public EnumLiteralDeclaration getLessThanEnumLiteralDeclaration_3() { return cLessThanEnumLiteralDeclaration_3; }
		
		//'<'
		public Keyword getLessThanLessThanSignKeyword_3_0() { return cLessThanLessThanSignKeyword_3_0; }
		
		//LessThanOrEqual = '=<'
		public EnumLiteralDeclaration getLessThanOrEqualEnumLiteralDeclaration_4() { return cLessThanOrEqualEnumLiteralDeclaration_4; }
		
		//'=<'
		public Keyword getLessThanOrEqualEqualsSignLessThanSignKeyword_4_0() { return cLessThanOrEqualEqualsSignLessThanSignKeyword_4_0; }
		
		//BiggerThanOrEqual = '=>'
		public EnumLiteralDeclaration getBiggerThanOrEqualEnumLiteralDeclaration_5() { return cBiggerThanOrEqualEnumLiteralDeclaration_5; }
		
		//'=>'
		public Keyword getBiggerThanOrEqualEqualsSignGreaterThanSignKeyword_5_0() { return cBiggerThanOrEqualEqualsSignGreaterThanSignKeyword_5_0; }
	}
	public class TimeUnitElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.TimeUnit");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMicroSecondsEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMicroSecondsMicrosecondsKeyword_0_0 = (Keyword)cMicroSecondsEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMilliSecondsEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMilliSecondsMillisecondsKeyword_1_0 = (Keyword)cMilliSecondsEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSecondsEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSecondsSecondsKeyword_2_0 = (Keyword)cSecondsEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cMinuteEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cMinuteMinuteKeyword_3_0 = (Keyword)cMinuteEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cHourEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cHourHourKeyword_4_0 = (Keyword)cHourEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cDayEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cDayDayKeyword_5_0 = (Keyword)cDayEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum TimeUnit:
		//    MicroSeconds = 'microseconds' |
		//    MilliSeconds = 'milliseconds' |
		//    Seconds = 'seconds'|
		//    Minute = 'minute' |
		//    Hour = 'hour' |
		//    Day = 'day'
		//    ;
		public EnumRule getRule() { return rule; }
		
		//MicroSeconds = 'microseconds' |
		//MilliSeconds = 'milliseconds' |
		//Seconds = 'seconds'|
		//Minute = 'minute' |
		//Hour = 'hour' |
		//Day = 'day'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MicroSeconds = 'microseconds'
		public EnumLiteralDeclaration getMicroSecondsEnumLiteralDeclaration_0() { return cMicroSecondsEnumLiteralDeclaration_0; }
		
		//'microseconds'
		public Keyword getMicroSecondsMicrosecondsKeyword_0_0() { return cMicroSecondsMicrosecondsKeyword_0_0; }
		
		//MilliSeconds = 'milliseconds'
		public EnumLiteralDeclaration getMilliSecondsEnumLiteralDeclaration_1() { return cMilliSecondsEnumLiteralDeclaration_1; }
		
		//'milliseconds'
		public Keyword getMilliSecondsMillisecondsKeyword_1_0() { return cMilliSecondsMillisecondsKeyword_1_0; }
		
		//Seconds = 'seconds'
		public EnumLiteralDeclaration getSecondsEnumLiteralDeclaration_2() { return cSecondsEnumLiteralDeclaration_2; }
		
		//'seconds'
		public Keyword getSecondsSecondsKeyword_2_0() { return cSecondsSecondsKeyword_2_0; }
		
		//Minute = 'minute'
		public EnumLiteralDeclaration getMinuteEnumLiteralDeclaration_3() { return cMinuteEnumLiteralDeclaration_3; }
		
		//'minute'
		public Keyword getMinuteMinuteKeyword_3_0() { return cMinuteMinuteKeyword_3_0; }
		
		//Hour = 'hour'
		public EnumLiteralDeclaration getHourEnumLiteralDeclaration_4() { return cHourEnumLiteralDeclaration_4; }
		
		//'hour'
		public Keyword getHourHourKeyword_4_0() { return cHourHourKeyword_4_0; }
		
		//Day = 'day'
		public EnumLiteralDeclaration getDayEnumLiteralDeclaration_5() { return cDayEnumLiteralDeclaration_5; }
		
		//'day'
		public Keyword getDayDayKeyword_5_0() { return cDayDayKeyword_5_0; }
	}
	public class GreedyQuantifiersElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.constraint.mydsl.MyDsl.GreedyQuantifiers");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOnceEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOnceOnceKeyword_0_0 = (Keyword)cOnceEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cZeroOrMoreEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cZeroOrMoreZeroOrMoreKeyword_1_0 = (Keyword)cZeroOrMoreEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cOneOrMoreEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cOneOrMoreOneOrMoreKeyword_2_0 = (Keyword)cOneOrMoreEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cZeroOrOneEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cZeroOrOneZeroOrOneKeyword_3_0 = (Keyword)cZeroOrOneEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum GreedyQuantifiers:
		//    Once= 'Once' |
		//    ZeroOrMore = 'ZeroOrMore' |
		//    OneOrMore = 'OneOrMore' |
		//    ZeroOrOne = 'ZeroOrOne'
		//    ;
		public EnumRule getRule() { return rule; }
		
		//Once= 'Once' |
		//ZeroOrMore = 'ZeroOrMore' |
		//OneOrMore = 'OneOrMore' |
		//ZeroOrOne = 'ZeroOrOne'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Once= 'Once'
		public EnumLiteralDeclaration getOnceEnumLiteralDeclaration_0() { return cOnceEnumLiteralDeclaration_0; }
		
		//'Once'
		public Keyword getOnceOnceKeyword_0_0() { return cOnceOnceKeyword_0_0; }
		
		//ZeroOrMore = 'ZeroOrMore'
		public EnumLiteralDeclaration getZeroOrMoreEnumLiteralDeclaration_1() { return cZeroOrMoreEnumLiteralDeclaration_1; }
		
		//'ZeroOrMore'
		public Keyword getZeroOrMoreZeroOrMoreKeyword_1_0() { return cZeroOrMoreZeroOrMoreKeyword_1_0; }
		
		//OneOrMore = 'OneOrMore'
		public EnumLiteralDeclaration getOneOrMoreEnumLiteralDeclaration_2() { return cOneOrMoreEnumLiteralDeclaration_2; }
		
		//'OneOrMore'
		public Keyword getOneOrMoreOneOrMoreKeyword_2_0() { return cOneOrMoreOneOrMoreKeyword_2_0; }
		
		//ZeroOrOne = 'ZeroOrOne'
		public EnumLiteralDeclaration getZeroOrOneEnumLiteralDeclaration_3() { return cZeroOrOneEnumLiteralDeclaration_3; }
		
		//'ZeroOrOne'
		public Keyword getZeroOrOneZeroOrOneKeyword_3_0() { return cZeroOrOneZeroOrOneKeyword_3_0; }
	}
	
	private final PatternModelElements pPatternModel;
	private final QueryInitializationElements pQueryInitialization;
	private final PatternInitializationElements pPatternInitialization;
	private final ComplexInitializationElements pComplexInitialization;
	private final ComplexPatternStatementsElements pComplexPatternStatements;
	private final ComplexPatternTypeElements pComplexPatternType;
	private final ComplexPatternOptionsElements pComplexPatternOptions;
	private final InputStatementElements pInputStatement;
	private final PatternStatementElements pPatternStatement;
	private final PatternTypeElements pPatternType;
	private final PatternOptionsElements pPatternOptions;
	private final OccurenceAtTimeElements pOccurenceAtTime;
	private final OccurenceAtLeastElements pOccurenceAtLeast;
	private final OccurenceAtMostElements pOccurenceAtMost;
	private final OccurenceAtNotSpecificTimeElements pOccurenceAtNotSpecificTime;
	private final TimerElements pTimer;
	private final MaxDurationElements pMaxDuration;
	private final MinDurationElements pMinDuration;
	private final TimeWindowElements pTimeWindow;
	private final ComparisonOperatorElements eComparisonOperator;
	private final TimeUnitElements eTimeUnit;
	private final GreedyQuantifiersElements eGreedyQuantifiers;
	private final ValueOptionsElements pValueOptions;
	private final StringLiteralElements pStringLiteral;
	private final NumberLiteralElements pNumberLiteral;
	private final TextLiteralElements pTextLiteral;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pPatternModel = new PatternModelElements();
		this.pQueryInitialization = new QueryInitializationElements();
		this.pPatternInitialization = new PatternInitializationElements();
		this.pComplexInitialization = new ComplexInitializationElements();
		this.pComplexPatternStatements = new ComplexPatternStatementsElements();
		this.pComplexPatternType = new ComplexPatternTypeElements();
		this.pComplexPatternOptions = new ComplexPatternOptionsElements();
		this.pInputStatement = new InputStatementElements();
		this.pPatternStatement = new PatternStatementElements();
		this.pPatternType = new PatternTypeElements();
		this.pPatternOptions = new PatternOptionsElements();
		this.pOccurenceAtTime = new OccurenceAtTimeElements();
		this.pOccurenceAtLeast = new OccurenceAtLeastElements();
		this.pOccurenceAtMost = new OccurenceAtMostElements();
		this.pOccurenceAtNotSpecificTime = new OccurenceAtNotSpecificTimeElements();
		this.pTimer = new TimerElements();
		this.pMaxDuration = new MaxDurationElements();
		this.pMinDuration = new MinDurationElements();
		this.pTimeWindow = new TimeWindowElements();
		this.eComparisonOperator = new ComparisonOperatorElements();
		this.eTimeUnit = new TimeUnitElements();
		this.eGreedyQuantifiers = new GreedyQuantifiersElements();
		this.pValueOptions = new ValueOptionsElements();
		this.pStringLiteral = new StringLiteralElements();
		this.pNumberLiteral = new NumberLiteralElements();
		this.pTextLiteral = new TextLiteralElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.constraint.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//PatternModel:
	//    (elements=PatternInitialization)|(elements=QueryInitialization) |(elements=ComplexInitialization);
	public PatternModelElements getPatternModelAccess() {
		return pPatternModel;
	}
	
	public ParserRule getPatternModelRule() {
		return getPatternModelAccess().getRule();
	}
	
	//QueryInitialization:
	//    'Initialize:' 'SimpleConstraint' name=ID timeWindow=TimeWindow? '{'
	//            'Event'  '{'
	//        inputStatements=InputStatement
	//        '}'
	//    '}';
	public QueryInitializationElements getQueryInitializationAccess() {
		return pQueryInitialization;
	}
	
	public ParserRule getQueryInitializationRule() {
		return getQueryInitializationAccess().getRule();
	}
	
	//PatternInitialization:
	//    'Initialize:' 'RealTimeConstraint' name=ID timeWindow=TimeWindow? '{'
	//            'Events' '{'
	//        inputStatements+=InputStatement+
	//        '}'
	////            'Declarations' '{'
	////        declareStatements+=DeclareStatement+
	////        '}'
	//            'Pattern'  '{'
	//        patternStatements=PatternStatement
	//        '}'
	//    '}';
	public PatternInitializationElements getPatternInitializationAccess() {
		return pPatternInitialization;
	}
	
	public ParserRule getPatternInitializationRule() {
		return getPatternInitializationAccess().getRule();
	}
	
	//ComplexInitialization:
	//    'Initialize:' 'ComplexConstraint' name=ID timeWindow=TimeWindow? '{'
	//            'Events' '{'
	//        inputStatements+=InputStatement+
	//        '}'
	//            'Pattern'  '{'
	//        complexPatternStatements=ComplexPatternStatements
	//        '}'
	//    '}';
	public ComplexInitializationElements getComplexInitializationAccess() {
		return pComplexInitialization;
	}
	
	public ParserRule getComplexInitializationRule() {
		return getComplexInitializationAccess().getRule();
	}
	
	//ComplexPatternStatements:
	//        'DefinePattern' '(' complexPatternType=ComplexPatternType ')'
	//;
	public ComplexPatternStatementsElements getComplexPatternStatementsAccess() {
		return pComplexPatternStatements;
	}
	
	public ParserRule getComplexPatternStatementsRule() {
		return getComplexPatternStatementsAccess().getRule();
	}
	
	//ComplexPatternType:
	//firstEvent=[InputStatement] ('Occurs' greedyQuantifiers=GreedyQuantifiers)? complexPatternOptions+=ComplexPatternOptions+
	//;
	public ComplexPatternTypeElements getComplexPatternTypeAccess() {
		return pComplexPatternType;
	}
	
	public ParserRule getComplexPatternTypeRule() {
		return getComplexPatternTypeAccess().getRule();
	}
	
	//ComplexPatternOptions:
	//('followed-by' (seceondEvent=[InputStatement]) ('Occurs' greedyQuantifiers=GreedyQuantifiers)?)
	//;
	public ComplexPatternOptionsElements getComplexPatternOptionsAccess() {
		return pComplexPatternOptions;
	}
	
	public ParserRule getComplexPatternOptionsRule() {
		return getComplexPatternOptionsAccess().getRule();
	}
	
	//InputStatement:
	//   'InputEvent' name=ID 'as' Property=STRING 'and' 'SetEvent' comparisonOperator=ComparisonOperator value=ValueOptions','
	//;
	public InputStatementElements getInputStatementAccess() {
		return pInputStatement;
	}
	
	public ParserRule getInputStatementRule() {
		return getInputStatementAccess().getRule();
	}
	
	////DeclareStatement:
	////    'SetEvent' (select=[InputStatement]) comparisonOperator=ComparisonOperator value=ValueOptions ','
	////;
	//PatternStatement:
	//    'DefinePattern' '(' patternType=PatternType ')'
	//;
	public PatternStatementElements getPatternStatementAccess() {
		return pPatternStatement;
	}
	
	public ParserRule getPatternStatementRule() {
		return getPatternStatementAccess().getRule();
	}
	
	//PatternType:
	//     firstEvent=[InputStatement] (patternOptions+=PatternOptions+);
	public PatternTypeElements getPatternTypeAccess() {
		return pPatternType;
	}
	
	public ParserRule getPatternTypeRule() {
		return getPatternTypeAccess().getRule();
	}
	
	//PatternOptions:
	//occurenceAtLeast=OccurenceAtLeast |
	//occurenceAtMost=OccurenceAtMost |
	//occurenceAtNotSpecificTime=OccurenceAtNotSpecificTime
	//;
	public PatternOptionsElements getPatternOptionsAccess() {
		return pPatternOptions;
	}
	
	public ParserRule getPatternOptionsRule() {
		return getPatternOptionsAccess().getRule();
	}
	
	//OccurenceAtTime:
	//     'Occurs-After' '@' minDuration=MinDuration | 'Occurs-Before' '@' maxDuration=MaxDuration
	//;
	public OccurenceAtTimeElements getOccurenceAtTimeAccess() {
		return pOccurenceAtTime;
	}
	
	public ParserRule getOccurenceAtTimeRule() {
		return getOccurenceAtTimeAccess().getRule();
	}
	
	//OccurenceAtLeast:
	//     ('followed-by' (seceondEvent=[InputStatement]) 'Occurs-After' '@' minDuration=MinDuration)
	//;
	public OccurenceAtLeastElements getOccurenceAtLeastAccess() {
		return pOccurenceAtLeast;
	}
	
	public ParserRule getOccurenceAtLeastRule() {
		return getOccurenceAtLeastAccess().getRule();
	}
	
	//OccurenceAtMost:
	//    ('followed-by' (seceondEvent=[InputStatement]) 'Occurs-Before' '@' maxDuration=MaxDuration)
	//;
	public OccurenceAtMostElements getOccurenceAtMostAccess() {
		return pOccurenceAtMost;
	}
	
	public ParserRule getOccurenceAtMostRule() {
		return getOccurenceAtMostAccess().getRule();
	}
	
	//OccurenceAtNotSpecificTime:
	//    ('followed-by' (seceondEvent=[InputStatement]))
	//;
	public OccurenceAtNotSpecificTimeElements getOccurenceAtNotSpecificTimeAccess() {
		return pOccurenceAtNotSpecificTime;
	}
	
	public ParserRule getOccurenceAtNotSpecificTimeRule() {
		return getOccurenceAtNotSpecificTimeAccess().getRule();
	}
	
	//Timer:
	//    MaxDuration | MinDuration
	//;
	public TimerElements getTimerAccess() {
		return pTimer;
	}
	
	public ParserRule getTimerRule() {
		return getTimerAccess().getRule();
	}
	
	//MaxDuration:
	//timerType='MaxDuration' '['time=INT timeUnit=TimeUnit ']'
	//;
	public MaxDurationElements getMaxDurationAccess() {
		return pMaxDuration;
	}
	
	public ParserRule getMaxDurationRule() {
		return getMaxDurationAccess().getRule();
	}
	
	//MinDuration:
	//timerType='MinDuration' '['time=INT timeUnit=TimeUnit']'
	//;
	public MinDurationElements getMinDurationAccess() {
		return pMinDuration;
	}
	
	public ParserRule getMinDurationRule() {
		return getMinDurationAccess().getRule();
	}
	
	//TimeWindow:
	//'With' 'TimeWindow' '['time=INT timeUnit=TimeUnit']'
	//;
	public TimeWindowElements getTimeWindowAccess() {
		return pTimeWindow;
	}
	
	public ParserRule getTimeWindowRule() {
		return getTimeWindowAccess().getRule();
	}
	
	//enum ComparisonOperator:
	//    Equal = '=' |
	//    NotEqual = '!=' |
	//    BiggerThan = '>'|
	//    LessThan = '<' |
	//    LessThanOrEqual = '=<' |
	//    BiggerThanOrEqual = '=>'
	//    ;
	public ComparisonOperatorElements getComparisonOperatorAccess() {
		return eComparisonOperator;
	}
	
	public EnumRule getComparisonOperatorRule() {
		return getComparisonOperatorAccess().getRule();
	}
	
	//enum TimeUnit:
	//    MicroSeconds = 'microseconds' |
	//    MilliSeconds = 'milliseconds' |
	//    Seconds = 'seconds'|
	//    Minute = 'minute' |
	//    Hour = 'hour' |
	//    Day = 'day'
	//    ;
	public TimeUnitElements getTimeUnitAccess() {
		return eTimeUnit;
	}
	
	public EnumRule getTimeUnitRule() {
		return getTimeUnitAccess().getRule();
	}
	
	//enum GreedyQuantifiers:
	//    Once= 'Once' |
	//    ZeroOrMore = 'ZeroOrMore' |
	//    OneOrMore = 'OneOrMore' |
	//    ZeroOrOne = 'ZeroOrOne'
	//    ;
	public GreedyQuantifiersElements getGreedyQuantifiersAccess() {
		return eGreedyQuantifiers;
	}
	
	public EnumRule getGreedyQuantifiersRule() {
		return getGreedyQuantifiersAccess().getRule();
	}
	
	//ValueOptions :
	//    stringLiteral=StringLiteral |
	//    numberLiteral=NumberLiteral |
	//    textLiteral=TextLiteral;
	public ValueOptionsElements getValueOptionsAccess() {
		return pValueOptions;
	}
	
	public ParserRule getValueOptionsRule() {
		return getValueOptionsAccess().getRule();
	}
	
	//StringLiteral :
	//    value=STRING;
	public StringLiteralElements getStringLiteralAccess() {
		return pStringLiteral;
	}
	
	public ParserRule getStringLiteralRule() {
		return getStringLiteralAccess().getRule();
	}
	
	//NumberLiteral:
	//    value=INT('.'INT)?;
	public NumberLiteralElements getNumberLiteralAccess() {
		return pNumberLiteral;
	}
	
	public ParserRule getNumberLiteralRule() {
		return getNumberLiteralAccess().getRule();
	}
	
	//TextLiteral:
	//    value=ID;
	public TextLiteralElements getTextLiteralAccess() {
		return pTextLiteral;
	}
	
	public ParserRule getTextLiteralRule() {
		return getTextLiteralAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
