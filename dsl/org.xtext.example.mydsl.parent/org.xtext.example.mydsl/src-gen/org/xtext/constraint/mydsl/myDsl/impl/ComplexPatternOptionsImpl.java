/**
 * generated by Xtext 2.26.0-SNAPSHOT
 */
package org.xtext.constraint.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.constraint.mydsl.myDsl.ComplexPatternOptions;
import org.xtext.constraint.mydsl.myDsl.GreedyQuantifiers;
import org.xtext.constraint.mydsl.myDsl.InputStatement;
import org.xtext.constraint.mydsl.myDsl.MyDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Complex Pattern Options</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.constraint.mydsl.myDsl.impl.ComplexPatternOptionsImpl#getSeceondEvent <em>Seceond Event</em>}</li>
 *   <li>{@link org.xtext.constraint.mydsl.myDsl.impl.ComplexPatternOptionsImpl#getGreedyQuantifiers <em>Greedy Quantifiers</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComplexPatternOptionsImpl extends MinimalEObjectImpl.Container implements ComplexPatternOptions
{
  /**
   * The cached value of the '{@link #getSeceondEvent() <em>Seceond Event</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSeceondEvent()
   * @generated
   * @ordered
   */
  protected InputStatement seceondEvent;

  /**
   * The default value of the '{@link #getGreedyQuantifiers() <em>Greedy Quantifiers</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGreedyQuantifiers()
   * @generated
   * @ordered
   */
  protected static final GreedyQuantifiers GREEDY_QUANTIFIERS_EDEFAULT = GreedyQuantifiers.ONCE;

  /**
   * The cached value of the '{@link #getGreedyQuantifiers() <em>Greedy Quantifiers</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGreedyQuantifiers()
   * @generated
   * @ordered
   */
  protected GreedyQuantifiers greedyQuantifiers = GREEDY_QUANTIFIERS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComplexPatternOptionsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.COMPLEX_PATTERN_OPTIONS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InputStatement getSeceondEvent()
  {
    if (seceondEvent != null && seceondEvent.eIsProxy())
    {
      InternalEObject oldSeceondEvent = (InternalEObject)seceondEvent;
      seceondEvent = (InputStatement)eResolveProxy(oldSeceondEvent);
      if (seceondEvent != oldSeceondEvent)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.COMPLEX_PATTERN_OPTIONS__SECEOND_EVENT, oldSeceondEvent, seceondEvent));
      }
    }
    return seceondEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InputStatement basicGetSeceondEvent()
  {
    return seceondEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSeceondEvent(InputStatement newSeceondEvent)
  {
    InputStatement oldSeceondEvent = seceondEvent;
    seceondEvent = newSeceondEvent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMPLEX_PATTERN_OPTIONS__SECEOND_EVENT, oldSeceondEvent, seceondEvent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GreedyQuantifiers getGreedyQuantifiers()
  {
    return greedyQuantifiers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGreedyQuantifiers(GreedyQuantifiers newGreedyQuantifiers)
  {
    GreedyQuantifiers oldGreedyQuantifiers = greedyQuantifiers;
    greedyQuantifiers = newGreedyQuantifiers == null ? GREEDY_QUANTIFIERS_EDEFAULT : newGreedyQuantifiers;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMPLEX_PATTERN_OPTIONS__GREEDY_QUANTIFIERS, oldGreedyQuantifiers, greedyQuantifiers));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPLEX_PATTERN_OPTIONS__SECEOND_EVENT:
        if (resolve) return getSeceondEvent();
        return basicGetSeceondEvent();
      case MyDslPackage.COMPLEX_PATTERN_OPTIONS__GREEDY_QUANTIFIERS:
        return getGreedyQuantifiers();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPLEX_PATTERN_OPTIONS__SECEOND_EVENT:
        setSeceondEvent((InputStatement)newValue);
        return;
      case MyDslPackage.COMPLEX_PATTERN_OPTIONS__GREEDY_QUANTIFIERS:
        setGreedyQuantifiers((GreedyQuantifiers)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPLEX_PATTERN_OPTIONS__SECEOND_EVENT:
        setSeceondEvent((InputStatement)null);
        return;
      case MyDslPackage.COMPLEX_PATTERN_OPTIONS__GREEDY_QUANTIFIERS:
        setGreedyQuantifiers(GREEDY_QUANTIFIERS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.COMPLEX_PATTERN_OPTIONS__SECEOND_EVENT:
        return seceondEvent != null;
      case MyDslPackage.COMPLEX_PATTERN_OPTIONS__GREEDY_QUANTIFIERS:
        return greedyQuantifiers != GREEDY_QUANTIFIERS_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (greedyQuantifiers: ");
    result.append(greedyQuantifiers);
    result.append(')');
    return result.toString();
  }

} //ComplexPatternOptionsImpl
