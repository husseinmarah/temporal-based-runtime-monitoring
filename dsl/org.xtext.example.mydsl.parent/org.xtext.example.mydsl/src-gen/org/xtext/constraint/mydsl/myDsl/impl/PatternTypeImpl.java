/**
 * generated by Xtext 2.26.0-SNAPSHOT
 */
package org.xtext.constraint.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.constraint.mydsl.myDsl.InputStatement;
import org.xtext.constraint.mydsl.myDsl.MyDslPackage;
import org.xtext.constraint.mydsl.myDsl.PatternOptions;
import org.xtext.constraint.mydsl.myDsl.PatternType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Pattern Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.constraint.mydsl.myDsl.impl.PatternTypeImpl#getFirstEvent <em>First Event</em>}</li>
 *   <li>{@link org.xtext.constraint.mydsl.myDsl.impl.PatternTypeImpl#getPatternOptions <em>Pattern Options</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PatternTypeImpl extends MinimalEObjectImpl.Container implements PatternType
{
  /**
   * The cached value of the '{@link #getFirstEvent() <em>First Event</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFirstEvent()
   * @generated
   * @ordered
   */
  protected InputStatement firstEvent;

  /**
   * The cached value of the '{@link #getPatternOptions() <em>Pattern Options</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPatternOptions()
   * @generated
   * @ordered
   */
  protected EList<PatternOptions> patternOptions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PatternTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.PATTERN_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InputStatement getFirstEvent()
  {
    if (firstEvent != null && firstEvent.eIsProxy())
    {
      InternalEObject oldFirstEvent = (InternalEObject)firstEvent;
      firstEvent = (InputStatement)eResolveProxy(oldFirstEvent);
      if (firstEvent != oldFirstEvent)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.PATTERN_TYPE__FIRST_EVENT, oldFirstEvent, firstEvent));
      }
    }
    return firstEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InputStatement basicGetFirstEvent()
  {
    return firstEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFirstEvent(InputStatement newFirstEvent)
  {
    InputStatement oldFirstEvent = firstEvent;
    firstEvent = newFirstEvent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PATTERN_TYPE__FIRST_EVENT, oldFirstEvent, firstEvent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PatternOptions> getPatternOptions()
  {
    if (patternOptions == null)
    {
      patternOptions = new EObjectContainmentEList<PatternOptions>(PatternOptions.class, this, MyDslPackage.PATTERN_TYPE__PATTERN_OPTIONS);
    }
    return patternOptions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.PATTERN_TYPE__PATTERN_OPTIONS:
        return ((InternalEList<?>)getPatternOptions()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.PATTERN_TYPE__FIRST_EVENT:
        if (resolve) return getFirstEvent();
        return basicGetFirstEvent();
      case MyDslPackage.PATTERN_TYPE__PATTERN_OPTIONS:
        return getPatternOptions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.PATTERN_TYPE__FIRST_EVENT:
        setFirstEvent((InputStatement)newValue);
        return;
      case MyDslPackage.PATTERN_TYPE__PATTERN_OPTIONS:
        getPatternOptions().clear();
        getPatternOptions().addAll((Collection<? extends PatternOptions>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PATTERN_TYPE__FIRST_EVENT:
        setFirstEvent((InputStatement)null);
        return;
      case MyDslPackage.PATTERN_TYPE__PATTERN_OPTIONS:
        getPatternOptions().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PATTERN_TYPE__FIRST_EVENT:
        return firstEvent != null;
      case MyDslPackage.PATTERN_TYPE__PATTERN_OPTIONS:
        return patternOptions != null && !patternOptions.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //PatternTypeImpl
